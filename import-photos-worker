#!/bin/bash

# USE:
#     import-photos-worker [-c] [-t] [-v] -d destroot file1...
#
# DEPENDENCIES:
#     sha2 to calculate file digests
#     exif to get date stamps from images
#     ffmpeg to get date stamps from movies
#     mdls (optional) to get date stamps from media

# DEFAULTS
copymove=mv
destroot=
tfix=
verbose=

OPTIND=1
while getopts :cd:e:f:g:m:s:tv option 2>/dev/null ; do
    case $option in
        c) copymove=cp ;;
        d) destroot="$OPTARG" ;;
        e) EXIF=$OPTARG ;;
        f) FFMPEG=$OPTARG ;;
        g) SIPS=$OPTARG ;;
        m) MDLS=$OPTARG ;;
        s) SHA2=$OPTARG ;;
        t) tfix=true ;;
        v) verbose="-v" ;;
        \:) echo >&2 "option [$OPTARG] requires an argument" ; exit 2 ;;
        \?) echo >&2 "unknown argument [$OPTARG]" ; exit 2 ;;
    esac
done
shift $(($OPTIND-1))

case $# in
    0) echo >&2 "usage: $(basename $0) [-c] [-t] [-v] -d destroot file1..."
       exit 2
       ;;
    *) : ;;
esac

if [ -z "$SHA2" ] ; then
    SHA2=$(which sha2)
    if [ $? -ne 0 ] ; then
        echo >&2 "install 'sha2' in order to calculate file digests."
        exit 1
    fi
fi

if [ -z "$EXIF" ] ; then
    EXIF=$(which exif)
    if [ $? -ne 0 ] ; then
        echo >&2 "install 'exif' in order to get date and time stamps from images."
        exit 1
    fi
fi

if [ -z "$FFMPEG" ] ; then
    FFMPEG=$(which ffmpeg)
    if [ $? -ne 0 ] ; then
        echo >&2 "install 'ffmpeg' in order to get date and time stamps from videos."
        exit 1
    fi
fi

if [ -z "$MDLS" ] ; then
    MDLS=$(which mdls) || MDLS=false
fi

if [ -z "$SIPS" ] ; then
    SIPS=$(which sips) || SIPS=false
fi

for src ; do
    if [ ! -f "$src" ] ; then
        echo >&2 "cannot import file: $src"
        continue
    fi

    aae=
    basename="${src%.*}"
    extension=$(tr A-Z a-z <<< "${src##*.}")
    datestamp=
    dest=

    case $extension in
        aae)
            # Prefer dealing with JPG over AAE.
            extension=jpg
            maybe="${basename}.${extension}"
            if [ ! -f "$maybe" ] ; then
                extension=jpeg
                maybe="${basename}.${extension}"
                if [ ! -f "$maybe" ] ; then
                    [ -n "$verbose" ] && echo >&2 "ignoring aae file without pair: $src"
                    continue
                fi
            fi
            aae=$src
            src=$maybe
            echo >&2 "aae to jpg conversion: $src"
            ;;
        gif)
            if [ "$SIPS" != "false" ] ; then
                # convert GIF files to PNG
                out="${basename}.png"
                $SIPS -s format png "$src" --out "$out"
                if [ $? -ne 0 ] ; then
                    echo >&2 "cannot convert GIF to PNG: $src"
                    continue
                fi
                rm -f "$src"
                if [ $? -ne 0 ] ; then
                    echo >&2 "cannot delete GIF: $src"
                    continue
                fi
                src=$out
                extension=png
            fi
            ;;
    esac

    case $extension in
        jpg|jpeg)
            extension=jpg # convert jpeg extensions to jpg
            if [ -z "$aae" ] ; then
                aae="${basename}.aae"
                if [ ! -f "$aae" ] ; then
                    aae=
                fi
            fi
            datestamp=$($EXIF -m -t DateTimeOriginal "$src")
            if [ $? -ne 0 -o -z "$datestamp" -o "$datestamp" == "??" ] ; then
                [ -n "$verbose" ] && echo >&2 "datestamp: [$datestamp]"
            fi
            ;;
        avi|m4v|mov|mp4|3gp)
            datestamp=$($FFMPEG -i "$src" -dump 2>&1 | awk '$1 == "creation_time" {print substr($3,0,4) "/" substr($3,6,2) "-" substr($3,9,2) ; exit}')
            ;;
        heic|png) : ;;
        *)
            echo >&2 "unknown extension: $src"
            continue
            ;;
    esac

    if [ -z "$datestamp" -o "$datestamp" == "" -o "$datestamp" == "??" ] ; then
        if [ "$MDLS" != "false" ] ; then
            # [ -n "$verbose" ] && echo >&2 "using $MDLS to resolve datestamp: $src"
            dest=$($MDLS -name kMDItemContentCreationDate "$src" | awk '{print substr($3,0,4) "/" substr($3,6,2) "-" substr($3,9,2)}')
        fi
        if [ -z "$dest" ] ; then
            if [ -z "$tfix" ] ; then
                echo >&2 "cannot get date time: $src"
                continue
            fi
            dest=1970/01-01
        fi
    else
        dest="${datestamp:0:4}/${datestamp:5:2}-${datestamp:8:2}"
    fi

    # echo >&2 "[$src] -> [$dest]"
    # echo >&2 "src: $src"
    # echo >&2 "aae: $aae"
    # echo >&2  "dest: $dest"
    # continue

    digest=$($SHA2 -q -256 "$src")
    if [ -z "$digest" ] ; then
        echo >&2 "empty file digest: $src"
        exit 1
    fi

    mkdir $verbose -p "$destroot/$dest"
    $copymove $verbose "$src" "$destroot/$dest/${digest}.${extension}"
    if [ $? -ne 0 ] ; then
        echo >&2 "cannot transfer file into repos: $src"
        continue
    fi
    if [ -n "$aae" ] ; then
        $copymove $verbose "$aae" "$destroot/$dest/${digest}.aae"
        if [ $? -ne 0 ] ; then
            echo >&2 "cannot transfer metadata file into repos: $src"
            continue
        fi
    fi
done
