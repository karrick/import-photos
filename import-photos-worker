#!/bin/bash

# USE:
#     import-photos-worker [-c] [-t] [-v] -d destroot file1...
#
# DEPENDENCIES:
#     exiftime from the exiftags package to get date stamps from images
#     ffmpeg to get date stamps from movies
#     gif2png (optional) to convert GIF to PNG
#     mdls (optional) to get date stamps from media
#     openssh to calculate file digests

# DEFAULTS
copymove=mv
destroot=
tfix=
verbose=

OPTIND=1
while getopts :cd:e:f:g:m:s:tv option 2>/dev/null ; do
    case $option in
        c) copymove=cp ;;
        d) destroot="$OPTARG" ;;
        e) EXIF=$OPTARG ;;
        f) FFMPEG=$OPTARG ;;
        g) GIF2PNG=$OPTARG ;;
        m) MDLS=$OPTARG ;;
        s) DIGEST=$OPTARG ;;
        t) tfix=true ;;
        v) verbose="-v" ;;
        \:) echo >&2 "option [$OPTARG] requires an argument" ; exit 2 ;;
        \?) echo >&2 "unknown argument [$OPTARG]" ; exit 2 ;;
    esac
done
shift $(($OPTIND-1))

case $# in
    0) echo >&2 "usage: $(basename $0) [-c] [-t] [-v] -d destroot file1..."
       exit 2
       ;;
    *) : ;;
esac

if [ -z "$DIGEST" ] ; then
    DIGEST=$(which openssl)
    if [ $? -ne 0 ] ; then
        echo >&2 "install 'openssl' in order to calculate file digests."
        exit 1
    fi
fi

if [ -z "$EXIF" ] ; then
    EXIF=$(which exiftime)
    if [ $? -ne 0 ] ; then
        echo >&2 "install 'exiftags' in order to get date and time stamps from images."
        exit 1
    fi
fi

if [ -z "$FFMPEG" ] ; then
    FFMPEG=$(which ffmpeg)
    if [ $? -ne 0 ] ; then
        echo >&2 "install 'ffmpeg' in order to get date and time stamps from videos."
        exit 1
    fi
fi

if [ -z "$MDLS" ] ; then
    MDLS=$(which mdls) || MDLS=false
fi

if [ -z "$GIF2PNG" ] ; then
    GIF2PNG=$(which gif2png) || GIF2PNG=false
fi

for src ; do
    if [ ! -f "$src" ] ; then
        echo >&2 "cannot import file: $src"
        continue
    fi
    if [ "${src:0:2}" == "._" ] ; then
        echo >&2 "ignoring metadata file: $src"
        continue
    fi

    aae=
    basename="${src%.*}"
    extension=$(tr A-Z a-z <<< "${src##*.}")
    datestamp=
    dest=

    case $extension in
        aae)
            # Prefer dealing with JPG over AAE.
            extension=jpg
            maybe="${basename}.${extension}"
            if [ ! -f "$maybe" ] ; then
                extension=jpeg
                maybe="${basename}.${extension}"
                if [ ! -f "$maybe" ] ; then
                    [ -n "$verbose" ] && echo >&2 "ignoring aae file without pair: $src"
                    continue
                fi
            fi
            aae=$src
            src=$maybe
            echo >&2 "aae to jpg conversion: $src"
            ;;
        gif)
            echo >&2 "cannot convert GIF to PNG: $src"
            continue

            if [ "$GIF2PNG" != "false" ] ; then
                # convert GIF files to PNG
                safe=$($GIF2PNG -w "$src" 2>/dev/null)
                if [ -z "$safe" ] ; then
                    # multi-image
                    echo >&2 "cannot convert multi-image GIF to PNG: $src"
                    continue
                fi
                out="${basename}.png"
                $GIF2PNG -m -d "$src"
                if [ $? -ne 0 ] ; then
                    echo >&2 "cannot convert GIF to PNG: $src"
                    continue
                fi
                src=$out
                extension=png
            fi
            ;;
    esac

    case $extension in
        jpg|jpeg)
            extension=jpg # convert jpeg extensions to jpg
            if [ -z "$aae" ] ; then
                aae="${basename}.aae"
                if [ ! -f "$aae" ] ; then
                    aae=
                fi
            fi
            datestamp=$($EXIF "$src" | awk '{print $3 ; exit}')
            if [ $? -ne 0 -o -z "$datestamp" -o "$datestamp" == "??" ] ; then
                [ -n "$verbose" ] && echo >&2 "datestamp: [$datestamp]"
            fi
            ;;
        avi|m4v|mov|mp4|3gp)
            datestamp=$($FFMPEG -i "$src" -dump 2>&1 | awk '$1 == "creation_time" {print substr($3,0,4) "/" substr($3,6,2) "-" substr($3,9,2) ; exit}')
            ;;
        heic|png) : ;;
        *)
            echo >&2 "unknown extension: $src"
            continue
            ;;
    esac

    if [ "$datestamp" != "" -a "$datestamp" != "??" ] ; then
        dest="${datestamp:0:4}/${datestamp:5:2}-${datestamp:8:2}"
    else
        # When previous logic could not determine date stamp, attempt to use
        # `mdls` to resolve.
        if [ "$MDLS" != "false" ] ; then
            # [ -n "$verbose" ] && echo >&2 "using $MDLS to resolve datestamp: $src"
            dest=$($MDLS -name kMDItemContentCreationDate "$src" | awk '{print substr($3,0,4) "/" substr($3,6,2) "-" substr($3,9,2)}')
        fi
        if [ -z "$dest" ] ; then
            if [ -z "$tfix" ] ; then
                echo >&2 "cannot get date time: $src"
                continue
            fi
            dest=1970/01-01
        fi
    fi

    # echo >&2 "[$src] -> [$dest]"
    # echo >&2 "src: $src"
    # echo >&2 "aae: $aae"
    # echo >&2  "dest: $dest"
    # continue

    digest=$($DIGEST sha256 "$src")
    if [ -z "$digest" ] ; then
        echo >&2 "empty file digest: $src"
        exit 1
    fi

    mkdir $verbose -p "$destroot/$dest"
    $copymove $verbose "$src" "$destroot/$dest/${digest}.${extension}"
    if [ $? -ne 0 ] ; then
        echo >&2 "cannot transfer file into repos: $src"
        continue
    fi
    if [ -n "$aae" ] ; then
        $copymove $verbose "$aae" "$destroot/$dest/${digest}.aae"
        if [ $? -ne 0 ] ; then
            echo >&2 "cannot transfer metadata file into repos: $src"
            continue
        fi
    fi
done
