#!/bin/bash

# USE:
#     import-photos [-c] [-l limit] [-p parallel] [-t] [-v] -d destroot srcroot1...
#
# DEPENDENCIES:
#     import-photos-worker, in same directory as this program, which itself requires:
#         exiftime from the exiftags package to get date stamps from images
#         ffmpeg to get date stamps from movies
#         gif2apng (optional) to convert GIF to PNG
#         mdls (optional) to get date stamps from media
#         openssh to calculate file digests

worker=$(dirname $0)/import-photos-worker
if [ ! -x "$worker" ] ; then
    echo >&2 "cannot import without worker: $worker."
    exit 1
fi

# DEFAULTS
copymove=
destroot=
limit=
parallel=
tfix=
verbose=

OPTIND=1
while getopts :cd:l:p:tv option 2>/dev/null ; do
    case $option in
        c) copymove="-c" ;;
        d) destroot="$OPTARG" ;;
        l) limit="-L${OPTARG}" ;;
        p) parallel="-P${OPTARG}" ;;
        t) tfix="-t" ;;
        v) verbose="-v" ;;
        \:) echo >&2 "option [$OPTARG] requires an argument" ; exit 2 ;;
        \?) echo >&2 "unknown argument [$OPTARG]" ; exit 2 ;;
    esac
done
shift $(($OPTIND-1))

case $# in
    0) echo >&2 "usage: $(basename $0) [-c] [-l limit] [-p parallel] [-t] [-v] -d destroot srcroot1..."
       exit 2
       ;;
    *) : ;;
esac

DIGEST=$(which openssl)
if [ $? -ne 0 ] ; then
    echo >&2 "install 'openssl' in order to calculate file digests."
    exit 1
fi
DIGEST="-s $DIGEST"

EXIF=$(which exiftime)
if [ $? -ne 0 ] ; then
    echo >&2 "install 'exiftags' in order to get date stamps from images."
    exit 1
fi
EXIF="-e $EXIF"

FFMPEG=$(which ffmpeg)
if [ $? -ne 0 ] ; then
    echo >&2 "install 'ffmpeg' in order to get date and time stamps from videos."
    exit 1
fi
FFMPEG="-f $FFMPEG"

MDLS=$(which mdls)
if [ $? -eq 0 ] ; then
    MDLS="-m $MDLS"
else
    MDLS="-m false"
fi

GIF2PNG=$(which gif2png)
if [ $? -eq 0 ] ; then
    GIF2PNG="-g $GIF2PNG"
else
    GIF2PNG="-g false"
fi

for srcroot ; do
    find "$srcroot" -type f -print0 | xargs -0 $limit $parallel $worker $EXIF $FFMPEG $MDLS $GIF2PNG $DIGEST $copymove $tfix $verbose -d "$destroot"
done
